service: downloader

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        Ref: "UserListNotification"

custom:
  secret: ${file(../secrets.json)}

functions:
  processUserList:
    handler: functions.processUserList
    environment:
      USERS_FILE: ${self:custom.secret.usersFile}
      SNS_ENDPOINT:
         Ref: "UserListNotification"
  fireFileProcessing:
    handler: functions.fireFileProcessing
    environment:
      apiKey: ${self:custom.secret.apiKey}
      apiServer: ${self:custom.secret.apiServer}
    role:
        "invokeLambdas"
  processUser:
    handler: functions.processUser
    environment:
      apiKey: ${self:custom.secret.apiKey}
      apiServer: ${self:custom.secret.apiServer}
    role:
        "invokeLambdas"

resources:
  Resources:
    UserListNotification:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "userlists"
    ProcessUserNotification:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "processUser"
    invokeLambdas:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: invokeLambdasPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - ec2:CreateNetworkInterface
                    - ec2:DescribeNetworkInterfaces
                    - ec2:DetachNetworkInterface
                    - ec2:DeleteNetworkInterface
                  Resource: "*"

